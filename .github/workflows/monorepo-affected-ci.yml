name: Monorepo Affected CI

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      run_all:
        description: 'Run across all packages regardless of changes'
        required: false
        default: 'false'

jobs:
  determine-affected:
    name: Determine affected packages
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect changes
        id: changes
        uses: dorny/paths-filter@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          filters: |
            core:
              - 'packages/core/**'
            shared_types:
              - 'packages/shared-types/**'
            git_wrapper:
              - 'packages/git-wrapper/**'
            actions:
              - 'packages/actions/**'
            extension:
              - 'packages/extension/**'
            workflows:
              - '.github/workflows/**'
            root:
              - '**'

      - name: Build matrix JSON
        id: set-matrix
        run: |
          RUN_ALL=${{ github.event_name == 'workflow_dispatch' && inputs.run_all == 'true' && 'true' || 'false' }}
          # Build an array of package names to run
          PKGS=()
          if [ "$RUN_ALL" = "true" ]; then
            PKGS=("@nostr-git/shared-types" "@nostr-git/core" "@nostr-git/git-wrapper" "@nostr-git/extension" "@nostr-git/actions")
          else
            if [ "${{ steps.changes.outputs.shared_types }}" = "true" ]; then PKGS+=("@nostr-git/shared-types"); fi
            if [ "${{ steps.changes.outputs.core }}" = "true" ]; then PKGS+=("@nostr-git/core"); fi
            if [ "${{ steps.changes.outputs.git_wrapper }}" = "true" ]; then PKGS+=("@nostr-git/git-wrapper"); fi
            if [ "${{ steps.changes.outputs.extension }}" = "true" ]; then PKGS+=("@nostr-git/extension"); fi
            if [ "${{ steps.changes.outputs.actions }}" = "true" ]; then PKGS+=("@nostr-git/actions"); fi
            # If only workflows or root files changed, run a lightweight all-packages check
            if [ ${#PKGS[@]} -eq 0 ] && { [ "${{ steps.changes.outputs.workflows }}" = "true" ] || [ "${{ steps.changes.outputs.root }}" = "true" ]; }; then
              PKGS=("@nostr-git/shared-types" "@nostr-git/core" "@nostr-git/git-wrapper" "@nostr-git/extension" "@nostr-git/actions")
            fi
          fi

          # Fallback: if still empty, run shared-types as sentinel
          if [ ${#PKGS[@]} -eq 0 ]; then PKGS=("@nostr-git/shared-types"); fi

          JSON=$(printf '%s\n' "${PKGS[@]}" | jq -R . | jq -s '{package: .}')
          echo "matrix=$JSON" >> "$GITHUB_OUTPUT"

      - name: Show matrix
        run: echo '${{ steps.set-matrix.outputs.matrix }}'

  build-and-test:
    name: Build & Test (${{ matrix.package }})
    needs: determine-affected
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.determine-affected.outputs.matrix) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Typecheck
        run: pnpm -w --filter "${{ matrix.package }}" run typecheck

      - name: Lint
        run: pnpm -w --filter "${{ matrix.package }}" run lint || pnpm -w --filter "${{ matrix.package }}" exec echo "No lint script"

      - name: Build
        run: pnpm -w --filter "${{ matrix.package }}" run build || pnpm -w --filter "${{ matrix.package }}" exec echo "No build script"

      - name: Test
        run: pnpm -w --filter "${{ matrix.package }}" run test || pnpm -w --filter "${{ matrix.package }}" exec echo "No test script"

      - name: TSD (shared-types only)
        if: matrix.package == '@nostr-git/shared-types'
        run: pnpm -w --filter @nostr-git/shared-types run tsd
